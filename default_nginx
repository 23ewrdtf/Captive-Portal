# read more here https://gist.github.com/plentz/6737338

# don't send the nginx version number in error pages and Server header
server_tokens off;

# config to don't allow the browser to render the page inside an frame or iframe
# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
add_header X-Frame-Options SAMEORIGIN;

# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
# to disable content-type sniffing on some browsers.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
add_header X-Content-Type-Options nosniff;

# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
# this particular website if it was disabled by the user.
# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";

# with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# https://www.owasp.org/index.php/Content_Security_Policy
# I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
# directives for css and js(if you have inline css or js, you will need to keep it too).
# more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
# adds the csp headers in the response, so if your website has xss somewhere scripts cannot be loaded from any url
# You can add safe URLs below your site might be using to fetch stuff, for example fonts so you wouldnt want to block them
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; img-src 'self'; style-src 'self' 'unsafe-inline' http://hotspot.localnet; font-src 'self' 'unsafe-inline' http://hotspot.localnet; frame-src http://hotspot.localnet; object-src 'none'";

server {
        listen 80 default_server;
        server_name  hotspot.localnet;
        root /var/www/html;
        
        # Only allow GET, HEAD, POST https://www.tenable.com/plugins/nessus/43111
        if ($request_method !~ ^(GET|HEAD|POST)$) { return 444; }


# Logs
#       access_log /var/log/nginx/captive.access.log;
#       error_log /var/log/nginx/captive.error.log warn;

# Below config for images and pdfs make sure that PDFs and Images added to your index.php wont be redirected as long as they are in below folders.
# Try images first, then index.php
        location /images {
         try_files $uri $uri/ /index.php;
       }

# Try pdf first, then index.php
        location /pdf {
         try_files $uri $uri/ /index.php;
       }

# That also works, it will ignore pdf and png files from being redirected.
#       location ~ \.(?:pdf|png)$ {
#        try_files $uri =404;
#       }

# Redirect requests for /generate_204 to open the captive portal screen
        location /generate_204 {
                return 302 http://hotspot.localnet/index.php;
        }

# Redirect requests for /blank.html to open the captive portal screen
        location /blank.html {
                return 302 http://hotspot.localnet/index.php;
        }

# Redirect requests for connectivitycheck.gstatic.com to open the captive portal screen
        location connectivitycheck.gstatic.com {
                return 302 http://hotspot.localnet/index.php;
        }

# Redirect requests for /mobile/status.php to open the captive portal screen
        location /mobile/status.php {
                return 302 http://hotspot.localnet/index.php;
        }

# For iOS
       if ($http_user_agent ~* (CaptiveNetworkSupport) ) {
        return 302 http://hotspot.localnet/index.php;
       }

# For others
       location / {
        return 302 http://hotspot.localnet/index.php;
       }

        index index.php index.html index.htm;

        location ~ \.php$ {
               include snippets/fastcgi-php.conf;
               fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
        }

}
